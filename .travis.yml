os: osx
language: swift
osx_image: xcode10.2

if: type = pull_request

stages:
  - lint
  - swiftpm
  - carthage
  - test
jobs:
  include:
    - &pod
      stage: lint
      osx_image: xcode10.3
      before_install:
        gem install cocoapods --version '~> 1.10.1'
      install:
        carthage bootstrap --no-build PromiseKit
      script: |
        cd Carthage/Checkouts/PromiseKit
        rm -rf Extensions/Foundation/Sources
        cp -R ../../../Sources Extensions/Foundation
        pod lib lint --subspec=PromiseKit/Foundation --fail-fast
    - <<: *pod
      osx_image: xcode11.6
    - <<: *pod
      osx_image: xcode12.5

    - &linux
      stage: swiftpm
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.0
      # ^^ we have some source-conditionals for this version
      name: Linux / Swift 3.2.0
      os: linux
      dist: bionic
      sudo: required
      language: generic
      before_install:
        eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
        swift build -Xswiftc -swift-version -Xswiftc $SWIFT_BUILD_VERSION
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.0.3
      name: Linux / Swift 3.2.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.1.2
      name: Linux / Swift 3.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=3  SWIFT_VERSION=4.2.4
      name: Linux / Swift 3.4
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.0
      name: Linux / Swift 4.0.0
      # ^^ we have some source-conditionals for this version
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.0.3
      name: Linux / Swift 4.0.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.1.2
      name: Linux / Swift 4.1.2
    - <<: *linux
      env: SWIFT_BUILD_VERSION=4  SWIFT_VERSION=4.2.4
      name: Linux / Swift 4.2.4
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.0.3
      name: Linux / Swift 5.0.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.1.5
      name: Linux / Swift 5.1.5
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.2.5
      name: Linux / Swift 5.2.5
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.3.3
      name: Linux / Swift 5.3.3
    - <<: *linux
      env: SWIFT_BUILD_VERSION=5 SWIFT_VERSION=5.4
      name: Linux / Swift 5.4.0

    - &swiftpm
      stage: swiftpm
      os: osx
      osx_image: xcode9.4
      language: objective-c
      script: swift build
    - <<: *swiftpm
      osx_image: xcode10.3
    - <<: *swiftpm
      osx_image: xcode11.6
    - <<: *swiftpm
      osx_image: xcode12.5

    - &carthage
      stage: carthage
      osx_image: xcode9.4
      before_install: carthage bootstrap --cache-builds
      install: sed -i '' "s/SWIFT_TREAT_WARNINGS_AS_ERRORS = NO;/SWIFT_TREAT_WARNINGS_AS_ERRORS = YES;/" *.xcodeproj/project.pbxproj
      script: carthage build --no-skip-current
      cache:
        directories:
        - Carthage
    - <<: *carthage
      osx_image: xcode10.3
    - <<: *carthage
      osx_image: xcode11.6
    - <<: *carthage
      osx_image: xcode12.5
      script: carthage build --no-skip-current --use-xcframeworks

    - &test
      stage: test
      xcode_scheme: PMKFoundation
      xcode_project: PMKFoundation.xcodeproj
      xcode_destination: 'platform=macOS'
      cache:
        directories:
        - Carthage
      before_install: |
        carthage bootstrap --cache-builds --no-use-binaries
      after_success:
        bash <(curl -s https://codecov.io/bash);
    - <<: *test
      xcode_destination: 'platform=iOS Simulator,OS=12.2,name=iPhone SE'
    - <<: *test
      xcode_destination: 'platform=tvOS Simulator,OS=12.2,name=Apple TV'
